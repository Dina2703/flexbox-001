----------------Flexbox---------------
The Flexible Box Model is a one dimensional layout model that provides a method to oofer space distrubution and powerful alignment capabilities.
* FLEX CONTAINER is the element that holds flex items. A container is created/define with 'display: flex', where its children will put in horisonal row.
* FLEX ITEMS are direct children of flec containers.

Flex Container Properties: 
 - flex-direction(to change from the horisonal row(defaul) to column.)
 - flex-wrap
 - flex-flow
 - justify-content
 - align-items
 - align-content

Flex Item Properties:
 - order
 - flex-grow
 - flex-shrink
 - flex-basis
 - align-self

 ---------------The Axes --------------------
 Depending it's a row or a column its main and cross axis are different.  
 <----------------MainAxis - flex-direction: row-----------------> (horizonal axis)
 Cross Axis - flex-direction: row (vertical axis)

 Main Axis - flex-direction: column (vertical)
 Cross Axis - flex-direction: column (horisonal)

 ------------Get Started---------------
 Why we do these at the top:

 * {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

 Each browser has its own 'default' CSS values for each element type. Using the universal selector * to reset margins and padding to 0 removes any cross-browser inconsistencies that may result from the different default CSS values.

In horizonal axis we need add height to move items inside it vertically, otherwise you can move only horizinally. Like align-items: center; properties doesn't work

* align-self to align one of the items.
.item:nth-of-type(3) {
align-self: flex-end;
}

* justify-content  - always os on the main axis
* align-items  - always is on the cross axis

----------------Center the text inside the items-------------------
first activate flexbox on the item like,
.item {
  display: flex;
  justify-container: center;
  align-items: center;
}

----------------flex-wrap----------
the items (with another 100px) that can't fit onto the page it's going to move it on to the next line.
it helps with responsiveness
flex-wrap: wrap; 